{"version":3,"sources":["IsBoiling.js","Input.js","Convert.js","App.js","index.js"],"names":["IsBoiling","temperature","Input","type","temp","setTemperature","value","onChange","e","scale","degrees","target","toCelsius","fahrenheit","toFahrenheit","celsius","tryConvert","convert","input","parseFloat","Number","isNaN","output","Math","round","toString","App","useState","state","setState","rootElement","document","getElementById","ReactDOM","render"],"mappings":"uJAmBeA,EAXG,SAAC,GAEf,OAFiC,EAAjBC,aAEG,IACR,iDAEA,sDCUAC,MAlBf,YAA6C,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,eAGxB,OACI,gCACI,qDAAqBF,KACrB,uBACIA,KAAK,OACLG,MAAUF,EACVG,SAAa,SAACC,GAAQH,EAAgB,CAACI,MAAMN,EAAKO,QAAQF,EAAEG,OAAOL,eCd5E,SAASM,EAAUC,GACxB,OAA2B,GAAnBA,EAAa,IAAU,EAG1B,SAASC,EAAaC,GAC3B,OAAkB,EAAVA,EAAc,EAAK,GAGtB,SAASC,EAAWf,EAAagB,GAEtC,IAAMC,EAAQC,WAAWlB,GAEzB,GAAImB,OAAOC,MAAMH,GACf,MAAO,GAGT,IAAMI,EAASL,EAAQC,GAEvB,OADgBK,KAAKC,MAAe,IAATF,GAAiB,KAC7BG,WCZjB,IAiBeC,EAjBH,WAER,MAA0BC,mBAAS,CAAClB,MAAO,GAAKC,QAAS,KAAzD,mBAAOkB,EAAP,KAAcC,EAAd,KAEMd,EAA0B,MAAhBa,EAAMnB,MAAgBO,EAAWY,EAAMlB,QAASE,GAAagB,EAAMlB,QAC7EG,EAA6B,MAAhBe,EAAMnB,MAAgBO,EAAWY,EAAMlB,QAASI,GAAgBc,EAAMlB,QAEzF,OACI,gCACI,0DACA,cAAC,EAAD,CAAOP,KAAQ,IAAKC,KAAQW,EAASV,eAAkBwB,IACvD,cAAC,EAAD,CAAO1B,KAAQ,IAAKC,KAAQS,EAAYR,eAAkBwB,IAC1D,cAAC,EAAD,CAAW5B,YAAe2B,EAAMlB,cCdtCoB,EAAcC,SAASC,eAAe,QAE5CC,IAASC,OAAO,cAAC,EAAD,IAASJ,K","file":"static/js/main.1ae78062.chunk.js","sourcesContent":["// Import react \r\nimport React from 'react';  \r\n\r\n\r\n// Create a component called IsBoiling  \r\n// It should accept a temperature prop\r\n// If temperature is greater than 100, it should display \"Water is boiling\"\r\n// Otherwise it should display \"Water is not boiling\"\r\nconst IsBoiling = ({temperature}) => {\r\n\r\n    if (temperature >= 100) {\r\n        return <p>Water is boiling</p>\r\n    } else {\r\n        return <p>Water is not boiling</p>\r\n    }\r\n}\r\n\r\n\r\n// Export the component back for use in other files \r\nexport default IsBoiling;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\n\r\n\r\nfunction Input({type, temp ,setTemperature}){\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <h2>Temperatura en Â°{type}</h2>\r\n            <input \r\n                type=\"text\"\r\n                value = { temp }\r\n                onChange = { (e) => { setTemperature( {scale:type,degrees:e.target.value} ) } } \r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\n// (e) => handleChange(e) regresa un objeto que tiene como atributo target,\r\n// que contiene el valor del input\r\n\r\nexport default Input;","export function toCelsius(fahrenheit) {\r\n  return (fahrenheit - 32) * 5 / 9;\r\n}\r\n  \r\nexport function toFahrenheit(celsius) {\r\n  return (celsius * 9 / 5) + 32;\r\n}\r\n\r\nexport function tryConvert(temperature, convert) {\r\n\r\n  const input = parseFloat(temperature);\r\n \r\n  if (Number.isNaN(input)) {\r\n    return '';\r\n  }\r\n  // return convert(input)\r\n  const output = convert(input);\r\n  const rounded = Math.round(output * 1000) / 1000;\r\n  return rounded.toString();\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport IsBoiling from './IsBoiling';\r\nimport Input  from './Input';\r\nimport { useState, useEffect } from 'react';\r\nimport { toCelsius, toFahrenheit, tryConvert } from './Convert';\r\n\r\nconst App = () => {\r\n\r\n    const [state, setState] = useState({scale: '' , degrees: ''});\r\n\r\n    const celsius = state.scale === \"F\" ? tryConvert(state.degrees, toCelsius) : state.degrees;\r\n    const fahrenheit = state.scale === \"C\" ? tryConvert(state.degrees, toFahrenheit) : state.degrees;\r\n    \r\n    return (\r\n        <div>\r\n            <h1>Conversor de Temperatura</h1>\r\n            <Input type = {\"C\"} temp = {celsius} setTemperature = {setState}/>\r\n            <Input type = {\"F\"} temp = {fahrenheit} setTemperature = {setState}/>\r\n            <IsBoiling temperature = {state.degrees} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\"\n\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(<App />, rootElement);\n\n\n\n"],"sourceRoot":""}